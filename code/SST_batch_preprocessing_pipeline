%% Batch EEG Preprocessing Pipeline for SST Data with ICA
% Author: RÃ¸skva
% Date: 09.05.25
%% 0. Initialize EEGLAB and Set Paths
addpath()
eeglab;  % Start EEGLAB
% Define folders
raw_folder = 
out_folder = 
% Get all .vhdr files in the raw folder
vhdr_files = dir(fullfile(raw_folder, '*.vhdr'));
% Loop over each file
for f = 1:length(vhdr_files);
    try
        % Get file info
        [~, base_name, ~] = fileparts(vhdr_files(f).name); % e.g., 'SST_152_1'
        disp(['Processing: ' base_name]);
        %% 1. Import Data
        EEG = pop_loadbv(raw_folder, vhdr_files(f).name);
        %% 2. Filtering
        EEG = pop_eegfiltnew(EEG, 'locutoff', 0.1, 'plotfreqz', 0); % High-pass 0.1 Hz
        EEG = pop_eegfiltnew(EEG, 'hicutoff', 40, 'plotfreqz', 0); % Low-pass 40 Hz
        %% 3. Resample to 500 Hz
        EEG = pop_resample(EEG, 500);
        %% 4. Remove EMG Channels
        EEG = pop_select(EEG, 'rmchannel', {'L_EMG', 'R_EMG'});
        %% 5. Select Only Relevant EEG Channels
        EEG = pop_select(EEG, 'channel', ...
            {'FP1','FP2','F7','F3','Fz','F4','F8','FT7','FC3','FC4','FT8','T7','C3','Cz','C4','T8','TP7','CP3','CPz','CP4','TP8','P7','P3','Pz','P4','P8','O1','Oz','O2','A1','A2'});
        EEG = pop_chanedit(EEG, 'lookup','standard-10-5-cap385.elp');
        %% 6. Re-reference to Average of Earlobes (A1, A2)
        EEG = pop_reref(EEG, find(ismember({EEG.chanlocs.labels}, {'A1','A2'})));
        %Removing A1/A2
        EEG = pop_select(EEG, 'rmchannel',{'A1','A2'});
        %% 7. Event List Creation and Trigger Renaming
        % Relevant triggers
        gl = 'S  9';
        gr = 'S  3';
        gsl = 'S  4';
        gsr = 'S  5';
        sl = 'S  6';
        sr = 'S  7';
        rl = 'S109';
        rr = 'S103';
        cl = 'S 19';
        cr = 'S 13';
        % Extract meaningful event names
        EEG = SST_recode(EEG, EEG.srate, gl, gr, gsl, gsr, sl, sr, rl, rr, cl, cr);
        %% 8. Run ICA
        EEG = pop_runica(EEG, 'extended', 1, 'interrupt', 'on');
        %% 9. Save ICA Decomposition
        out_filename = [base_name '_ICA.set'];
        pop_saveset(EEG, 'filename', out_filename, 'filepath', out_folder);
        disp(['SUCCESS: ' base_name ' processed and saved as ' out_filename]);
        catch ME
      % Display error in console
         disp(['ERROR processing ' vhdr_files(f).name ':']);
         disp(getReport(ME, 'extended', 'hyperlinks', 'off'));
      % Log to error file with timestamp
        fid = fopen(fullfile(out_folder, 'processing_errors.log'), 'a');
        fprintf(fid, '[%s] Error in %s:\n%s\n\n', ...
            datetime("now"), vhdr_files(f).name, getReport(ME));
        fclose(fid);
    end
end
disp('Batch processing complete!');
